На основе такой структуры данных как связный список строятся несколько других структур:
- список (list);
- стек (stack);
- очередь (queue);

Структура данных список может быть двухсвязным или односвязным. Реализацией двухсвязного
списка в библиотеке stl является контейнер std::list.

Стек. Эта структура данных позволяет добавлять и удалять элементы только из начала. Она 
работает по принципу LIFO — Last In, First Out (англ. «последним пришёл — первым ушёл»). 
Последний добавленный в стек элемент должен будет покинуть его раньше остальных.
Как применяют стеки:
- для реализации рекурсии.
- для вычислений постфиксных значений.
- для временного хранения данных, например истории запросов или изменений.
В библиотеке контейнеров есть класс std::stack, который предоставляет программисту 
функциональные возможности стека.

Очередь. Этот вид структуры представляет собой ряд данных, как и стек. Но в отличие от 
него она работает по принципу FIFO — First In, First Out (англ. «первым пришёл — первым 
ушёл»). Данные добавляют в конец, а извлекают из начала. Реализацией очереди в библиотеке
stl является контейнер std::queue.
Бывают неклассические, двусторонние очереди. В них можно добавлять элементы и извлекать 
их из начала и конца структуры. Элементы посередине недоступны. Такой частный случай
очереди называется дек (deque). В библиотеке контейнеров есть класс std::deque, который 
предоставляет программисту функциональные возможности дека.
Как применяют очереди:
- для реализации очередей, например на доступ к определённому ресурсу.
- для управления потоками в многопоточных средах.
- для генерации значений.
- для создания буферов.

Ещё существует такая структура данных как бинарное (двоичное) дерево поиска и её 
усовершенствованная версия сбалансированное бинарное дерево (красно-чёрное дерево поиска).
На основе структуры данных красно-чёрное дерево поиска построены такие коллекции stl как
set, multiset и map. Используется для организации хранения данных таким образом, чтобы 
гарантировать поиск элемента за логарифмическое время.

Префиксные деревья использовались для подсказки слов в месенджерах и в командной строке 
linux.

Существует ещё такая структура данных как хэш-таблица, которая строится на основе массива
и хэш-функции. Служит для хранения и поиска значений по ключу.